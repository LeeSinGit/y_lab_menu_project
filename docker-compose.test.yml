version: '3.9'


services:
  api:
    build: .
    container_name: api
    command: >
      sh -c "
      python -m alembic upgrade head && python -m uvicorn main:app --host 0.0.0.0 --port 8000"

    volumes:
      - .:/app
    ports:
      - '8000:8000'
    networks:
      - menu_networks
    depends_on:
      db:
        condition: service_healthy


  db:
    image: postgres:15.1-alpine
    container_name: db_postgres
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - menu_networks


  pytest:
    build: .
    container_name: pytest
    command: sh -c "cd /app && export PYTHONPATH=/app && python -m pytest"
    volumes:
      - .:/app
    networks:
      - menu_networks
    depends_on:
      db:
        condition: service_healthy


networks:
  menu_networks:
    name: menu_networks


volumes:
  db_data:
    name: db_data
